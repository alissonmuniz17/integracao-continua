name: LoadTest

on:
  workflow_call:

jobs:
  loadtest:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v3

    - name: Configurando credenciais da AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ID_CHAVE_ACESSO }}
        aws-secret-access-key: ${{ secrets.CHAVE_SECRETA }}
        aws-region: us-east-2

    - name: Clonando repositório do teste de carga
      run: git clone https://github.com/alissonmuniz17/teste-de-carga.git

    - name: Instalando Terraform
      uses: hashicorp/setup-terraform@v2.0.3

    - name: Init Terraform
      run: terraform -chdir=teste-de-carga/env/Homolog init

    - name: Apply Terraform
      run: terraform -chdir=teste-de-carga/env/Homolog apply -auto-approve

    - run: echo "$(terraform -chdir=teste-de-carga/env/Homolog output -raw IP_alb)"
      id: URL

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Instalando Locust
      uses: BSFishy/pip-action@v1
      with:
        packages: locust

    - name: Gerando arquivo Locust
      run: |
        echo "from locust import HttpUser, TaskSet, task, between" >> locustfile.py
        echo "" >> locustfile.py
        echo "class UserTasks(TaskSet):" >> locustfile.py
        echo "	@task(1)" >> locustfile.py
        echo "	def index(self):" >> locustfile.py
        echo '		self.client.get("/bruno")' >> locustfile.py
        echo "" >> locustfile.py
        echo "class WebsiteUser(HttpUser):" >> locustfile.py
        echo "	tasks = [UserTasks]" >> locustfile.py
        echo "	wait_time = between(1, 5)" >> locustfile.py

    - name: Executando teste de carga
      run: sleep 60s ; locust -f locustfile.py --headless -u 10 -r 5 --run-time 120s -H http://${{ steps.URL.outputs.stdout }}
      
    - name: Destroy infraestrutura
      run: terraform -chdir=teste-de-carga/env/Homolog destroy -auto-approve
