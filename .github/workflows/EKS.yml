name: Kubernetes

on:
  workflow_call:

jobs:
  EKS:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v3

    - name: Configurando credenciais da AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ID_CHAVE_ACESSO }}
        aws-secret-access-key: ${{ secrets.CHAVE_SECRETA }}
        aws-region: us-west-2
    
    - name: Clonando repositório
      run: git clone https://github.com/alissonmuniz17/Infra_CI_Kubernetes.git

    - name: Limpar cache local do Terraform
      run: |
        echo "Removendo .terraform/ e .terraform.lock.hcl de Infra_CI_Kubernetes/env/Homolog"
        rm -rf Infra_CI_Kubernetes/env/Homolog/.terraform
        rm -f Infra_CI_Kubernetes/env/Homolog/.terraform.lock.hcl

    - name: Exibindo conteúdo do EKS.tf
      run: |
        echo "--- Conteúdo do EKS.tf ---"
        cat Infra_CI_Kubernetes/infra/EKS.tf
        echo "--- Fim do Conteúdo ---"
    
    - name: Instalando Terraform
      uses: hashicorp/setup-terraform@v2.0.3
      
    - name: Init Terraform
      run: terraform -chdir=Infra_CI_Kubernetes/env/Homolog init -upgrade

    - name: Destroy Terraform
      run: terraform -chdir=Infra_CI_Kubernetes/env/Homolog destroy -auto-approve
      
    - name: Apply Terraform
      run: terraform -chdir=Infra_CI_Kubernetes/env/Homolog apply -auto-approve

    - name: Output Terraform
      run: echo "$(terraform -chdir=Infra_CI_Kubernetes/env/Homolog output -raw IP_db)"
      id: URL


    - name: Instalando o Kubectl
      uses: Azure/setup-kubectl@v4.0.0

    - name: Criando um arquivo kubeconfig
      run: aws sts get-caller-identity

    - name: Criar arquivo kubeconfig automaticamente
      run: aws eks update-kubeconfig --region us-west-2 --name homolog2

    - name: Testando a configuração
      run: kubectl get svc

    - run: kubectl create secret generic dbhost --from-literal=HOST=${{steps.URL.outuput.stdout}}
    - run: kubectl create secret generic dbport --from-literal=DBPORT=${{secrets.DBPORT}}
    - run: kubectl create secret generic dbuser --from-literal=USER=${{secrets.DBUSER}}
    - run: kubectl create secret generic dbpassword --from-literal=PASSWORD=${{secrets.DBPASSWORD}}
    - run: kubectl create secret generic dbname --from-literal=DBNAME=${{secrets.DBNAME}}
    - run: kubectl create secret generic port --from-literal=PORT=8000

    - run: kubectl apply -f Infra_CI_Kubernetes/go.yaml
